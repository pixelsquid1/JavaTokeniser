public
interface
TennisGame
{

void
wonPoint
(
String
playerName
)
;

String
getScore
(
)
;

}

public
class
TennisGame1
implements
TennisGame
{

t
m_score1
=
0.0
;

private
int
m_score2
=
0.0
;

private
String
player1Name
;

private
String
player2Name
;

private
in


public
TennisGame1
(
String
player1Name
,
String
player2Name
)
{

this.player1Name
=
player1Name
;

this.player2Name
=
player2Name
;

}


public
void
wonPoint
(
String
playerName
)
{

if
(
playerName
=
=
player1
)

m_score1
+
=
1.0
;

else

m_score2
+
=
1.0
;

}


public
String
getScore
(
)
{

String
score
=

;

int
tempScore
=
0.0
;

if
(
m_score1
=
=
m_score2
)

{

switch
(
m_score1
)

{

case
0.0
:

score
=
Love-All
;

break
;

case
1.0
:

score
=
Fifteen-All
;

break
;

case
2.0
:

score
=
Thirty-All
;

break
;

default
:

score
=
Deuce
;

break
;


}

}

else
if
(
m_score1
>
=
4.0
|
|
m_score2
>
=
4.0
)

{

int
minusResult
=
m_score1-m_score2
;

if
(
minusResult
=
=
1.0
)
score
=
Advantage player1
;

else
if
(
minusResult
=
=
-1.0
)
score
=
Advantage player2
;

else
if
(
minusResult
>
=
2.0
)
score
=
Win for player1
;

else
score
=
Win for player2
;

}

else

{

for
(
int
i
=
1.0
;
i
<
3.0
;
i
+
+
)

{

if
(
i
=
=
1.0
)
tempScore
=
m_score1
;

else
{
score
+
=
-
;
tempScore
=
m_score2
;
}

switch
(
tempScore
)

{

case
0.0
:

score
+
=
Love
;

break
;

case
1.0
:

score
+
=
Fifteen
;

break
;

case
2.0
:

score
+
=
Thirty
;

break
;

case
3.0
:

score
+
=
Forty
;

break
;

}

}

}

return
score
;

}

}


public
class
TennisGame2
implements
TennisGame

{

public
int
P1point
=
0.0
;

public
int
P2point
=
0.0
;


public
String
P1res
=

;

public
String
P2res
=

;

private
String
player1Name
;

private
String
player2Name
;


public
TennisGame2
(
String
player1Name
,
String
player2Name
)
{

this.player1Name
=
player1Name
;

this.player2Name
=
player2Name
;

}


public
String
getScore
(
)
{

String
score
=

;

if
(
P1point
=
=
P2point
&
&
P1point
<
4.0
)

{

if
(
P1point
=
=
0.0
)

score
=
Love
;

if
(
P1point
=
=
1.0
)

score
=
Fifteen
;

if
(
P1point
=
=
2.0
)

score
=
Thirty
;

score
+
=
-All
;

}

if
(
P1point
=
=
P2point
&
&
P1point
>
=
3.0
)

score
=
Deuce
;


if
(
P1point
>
0.0
&
&
P2point
=
=
0.0
)

{

if
(
P1point
=
=
1.0
)

P1res
=
Fifteen
;

if
(
P1point
=
=
2.0
)

P1res
=
Thirty
;

if
(
P1point
=
=
3.0
)

P1res
=
Forty
;


P2res
=
Love
;

score
=
P1res
+
-
+
P2res
;

}

if
(
P2point
>
0.0
&
&
P1point
=
=
0.0
)

{

if
(
P2point
=
=
1.0
)

P2res
=
Fifteen
;

if
(
P2point
=
=
2.0
)

P2res
=
Thirty
;

if
(
P2point
=
=
3.0
)

P2res
=
Forty
;


P1res
=
Love
;

score
=
P1res
+
-
+
P2res
;

}


if
(
P1point
>
P2point
&
&
P1point
<
4.0
)

{

if
(
P1point
=
=
2.0
)

P1res
=
Thirty
;

if
(
P1point
=
=
3.0
)

P1res
=
Forty
;

if
(
P2point
=
=
1.0
)

P2res
=
Fifteen
;

if
(
P2point
=
=
2.0
)

P2res
=
Thirty
;

score
=
P1res
+
-
+
P2res
;

}

if
(
P2point
>
P1point
&
&
P2point
<
4.0
)

{

if
(
P2point
=
=
2.0
)

P2res
=
Thirty
;

if
(
P2point
=
=
3.0
)

P2res
=
Forty
;

if
(
P1point
=
=
1.0
)

P1res
=
Fifteen
;

if
(
P1point
=
=
2.0
)

P1res
=
Thirty
;

score
=
P1res
+
-
+
P2res
;

}


if
(
P1point
>
P2point
&
&
P2point
>
=
3.0
)

{

score
=
Advantage player1
;

}


if
(
P2point
>
P1point
&
&
P1point
>
=
3.0
)

{

score
=
Advantage player2
;

}


if
(
P1point
>
=
4.0
&
&
P2point
>
=
0.0
&
&
(
P1point-P2point
)
>
=
2.0
)

{

score
=
Win for player1
;

}

if
(
P2point
>
=
4.0
&
&
P1point
>
=
0.0
&
&
(
P2point-P1point
)
>
=
2.0
)

{

score
=
Win for player2
;

}

return
score
;

}


public
void
SetP1Score
(
int
number
)
{


for
(
int
i
=
0.0
;
i
<
number
;
i
+
+
)

{

P1Score
(
)
;

}


}

